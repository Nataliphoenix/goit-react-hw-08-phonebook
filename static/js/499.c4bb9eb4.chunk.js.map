{"version":3,"file":"static/js/499.c4bb9eb4.chunk.js","mappings":"qQAAaA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAErBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,E,2DCAzBC,EAAOC,EAAAA,GAAAA,KAAH,qEAKJC,EAAmBD,EAAAA,GAAAA,MAAH,6HAOhBE,EAAmBF,EAAAA,GAAAA,MAAH,0SAmBhBG,EAAoBH,EAAAA,GAAAA,OAAH,4a,SCnBjBI,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXX,GAAWY,EAAAA,EAAAA,IAAYV,GAEvBW,EAAY,mCAAG,WAAMC,GAAN,2EACnBA,EAAEC,iBACIC,EAAOF,EAAEG,OACTC,EAAOF,EAAKE,KAAKC,MACjBC,EAASJ,EAAKI,OAAOD,MAEvBnB,EAASqB,MAAK,SAAAC,GAAI,OAAIA,EAAKJ,OAASA,CAAlB,IACpBK,EAAAA,GAAAA,MAAA,UAAeL,EAAf,gCAEAR,GACEc,EAAAA,EAAAA,IAAW,CACTC,IAAIC,EAAAA,EAAAA,MACJR,KAAAA,EACAE,OAAAA,KAGJG,EAAAA,GAAAA,QAAA,UAAiBL,EAAjB,iCACAF,EAAKW,SAjBY,2CAAH,sDAqBlB,OACE,UAACvB,EAAD,CAAMwB,SAAUf,EAAhB,WACE,UAACP,EAAD,CAAkBuB,QAAQ,OAA1B,mBACO,SAAC,MAAD,KACL,SAACtB,EAAD,CACEuB,KAAK,OACLZ,KAAK,OACLa,YAAY,aACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAAC5B,EAAD,CAAkBuB,QAAQ,SAA1B,qBACS,SAAC,MAAD,KACP,SAACtB,EAAD,CACEuB,KAAK,MACLZ,KAAK,SACLa,YAAY,qBACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAAC1B,EAAD,CAAmBsB,KAAK,SAAxB,2BAGL,E,oBChEYK,EAAmB9B,EAAAA,GAAAA,GAAH,wBAGhB+B,EAAkB/B,EAAAA,GAAAA,GAAH,wNAefgC,EAAoBhC,EAAAA,GAAAA,OAAH,wXCNjBiC,EAAc,WACzB,IAAMtC,GAAWY,EAAAA,EAAAA,IAAYV,GACvBqC,GAAY3B,EAAAA,EAAAA,IAAYd,GACxBY,GAAWC,EAAAA,EAAAA,MAEX6B,GAAS5B,EAAAA,EAAAA,IAAY6B,EAAAA,IACrBC,EAAiB1C,EAASwC,QAAO,SAAAG,GAAO,OAC5CA,EAAQzB,KAAK0B,cAAcC,SAASL,EADQ,IAI9C,OACE,gCACGD,IAAa,SAACO,EAAA,EAAD,KACL,OAAR9C,QAAQ,IAARA,OAAA,EAAAA,EAAU+C,QAAS,GAClB,+BACE,SAACZ,EAAD,UACGO,EAAeM,KAAI,gBAAGvB,EAAH,EAAGA,GAAIP,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OAClB,UAACgB,EAAD,YACE,0BACE,4BAAOlB,EAAP,QACCE,MAEH,SAACiB,EAAD,CACEP,KAAK,SACLmB,QAAS,kBAAMvC,GAASwC,EAAAA,EAAAA,IAAczB,GAA7B,EAFX,sBALoBA,EADJ,SAiBxB,yCAIP,ECjDY0B,EAAkB9C,EAAAA,GAAAA,MAAH,kUCEf+C,EAAS,WACpB,IAAM1C,GAAWC,EAAAA,EAAAA,MAQjB,OACE,SAACwC,EAAD,CACErB,KAAK,OACLuB,SATiB,SAAAvC,GACnBA,EAAEC,iBACF,IAAMI,EAAQL,EAAEwC,cAAcnC,MAC9BT,GAASgC,EAAAA,EAAAA,IAAevB,GACzB,EAMGY,YAAY,yBAGjB,EClBYwB,EAAelD,EAAAA,GAAAA,QAAH,sFAOZmD,EAAmBnD,EAAAA,GAAAA,GAAH,8CCLhBoD,EAAU,SAAC,GAAyB,IAAvBxB,EAAsB,EAAtBA,MAAOyB,EAAe,EAAfA,SAC/B,OACE,UAACH,EAAD,YACE,SAACC,EAAD,UAAmBvB,IAClByB,IAGN,ECTYC,EAAYtD,EAAAA,GAAAA,IAAH,sWCOP,SAASuD,IACtB,IAAMlD,GAAWC,EAAAA,EAAAA,MAMjB,OAJAkD,EAAAA,EAAAA,YAAU,WACRnD,GAASoD,EAAAA,EAAAA,MACV,GAAE,CAACpD,KAGF,UAACiD,EAAD,YACE,SAACF,EAAD,CAASxB,MAAM,YAAf,UACE,SAACxB,EAAD,OAGF,UAACgD,EAAD,CAASxB,MAAM,WAAf,WACE,SAACmB,EAAD,KACA,SAACd,EAAD,SAIP,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectLoading = state => state.contacts.loading;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectAllContacts = state => state.contacts.items;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContactFormLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 25px;\n`;\n\nexport const ContactFormInput = styled.input`\n  padding: 1px 5px;\n\n  width: 300px;\n  height: 30px;\n  font-size: 14px;\n\n  border: 1px solid #edc7b7;\n  border-radius: 5px;\n  outline: none;\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border-color: #2196f3;\n  }\n`;\n\nexport const ContactFormButton = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  width: 140px;\n  border-radius: 8px;\n  border: 1px solid #edc7b7;\n  cursor: pointer;\n  background-color: #eee2dc;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    background-color: #bab2b5;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport toast from 'react-hot-toast';\nimport { nanoid } from 'nanoid';\nimport { BsJournalPlus } from 'react-icons/bs';\nimport { BsTelephone } from 'react-icons/bs';\nimport {\n  Form,\n  ContactFormInput,\n  ContactFormLabel,\n  ContactFormButton,\n} from 'components/ContactForm/ContactForm.styled.js';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (contacts.find(cont => cont.name === name)) {\n      toast.error(`${name} is already your friend...`);\n    } else {\n      dispatch(\n        addContact({\n          id: nanoid(),\n          name,\n          number,\n        })\n      );\n      toast.success(`${name} is now on your Friends List`);\n      form.reset();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <ContactFormLabel htmlFor=\"name\">\n        Name <BsJournalPlus />\n        <ContactFormInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContactFormLabel>\n      <ContactFormLabel htmlFor=\"number\">\n        Number <BsTelephone />\n        <ContactFormInput\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactFormLabel>\n      <ContactFormButton type=\"submit\">Add contact</ContactFormButton>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListItems = styled.ul`\n`;\n\nexport const ContactListItem = styled.li`\ndisplay: flex;\njustify-content: space-between;\nlist-style: none;\n\n    :first-child {\n        margin-top:25px;\n    }\n\n    :not(:last-child) {\n        margin-bottom:15px;\n    }\n    \n`;\n\nexport const ContactListButton = styled.button`\npadding: 4px 5px;\nwidth: 80px;\nborder-radius: 4px;\nborder: 1px solid #EDC7B7;\ncursor: pointer;\n\nbackground-color:  #EEE2DC;\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\ntransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\nbox-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover {\n        background-color: #BAB2B5;\n    }\n`;","import { Loader } from '../Loader/Loader.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectAllContacts,\n  selectLoading,\n} from '../../redux/contacts/selectors';\nimport { selectFilterValue } from 'redux/filterSlice.js';\nimport { deleteContact } from 'redux/contacts/operations.js';\nimport {\n  ContactListItems,\n  ContactListItem,\n  ContactListButton,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const isLoading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilterValue);\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {contacts?.length > 0 ? (\n        <>\n          <ContactListItems>\n            {filterContacts.map(({ id, name, number }) => (\n              <ContactListItem key={id}>\n                <p>\n                  <span>{name} :</span>\n                  {number}\n                </p>\n                <ContactListButton\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(id))}\n                >\n                  Delete\n                </ContactListButton>\n              </ContactListItem>\n            ))}\n          </ContactListItems>\n        </>\n      ) : (\n        <p>No contacts</p>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterFormInput = styled.input`\n  padding: 1px 5px;\n  margin-bottom: 12px;\n\n  width: 300px;\n  height: 30px;\n  font-size: 14px;\n\n  border: 1px solid #edc7b7;\n  border-radius: 5px;\n  outline: none;\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border-color: #2196f3;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/filterSlice.js';\nimport { FilterFormInput } from 'components/Filter/Filter.styled.js';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    e.preventDefault();\n    const value = e.currentTarget.value;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <FilterFormInput\n      type=\"text\"\n      onChange={changeFilter}\n      placeholder=\"Enter name for Search\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const SectionTitle = styled.section`\nfont-size:18px;\npadding-top: 15px;\npadding-bottom: 15px;\n\n`;\n\nexport const SectionTitleText = styled.h2`\nmargin-bottom: 20px;\n`;","import PropTypes from 'prop-types';\n\nimport { SectionTitle, SectionTitleText } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionTitle>\n      <SectionTitleText>{title}</SectionTitleText>\n      {children}\n    </SectionTitle>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 40px;\n  padding: 30px;\n  width: 420px;\n  font-size: 16px;\n  font-weight: 450;\n\n  color: #010101;\n  background-color: #edf5e1;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm.jsx';\nimport { ContactList } from 'components/ContactList/ContactList.jsx';\nimport { Filter } from 'components/Filter/Filter.jsx';\nimport { Section } from 'components/Section/Section.jsx';\nimport { fetchContacts } from 'redux/contacts/operations.js';\nimport { Container } from './Contacts.styled.js';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectAllContacts","items","Form","styled","ContactFormLabel","ContactFormInput","ContactFormButton","ContactForm","dispatch","useDispatch","useSelector","handleSubmit","e","preventDefault","form","target","name","value","number","find","cont","toast","addContact","id","nanoid","reset","onSubmit","htmlFor","type","placeholder","pattern","title","required","ContactListItems","ContactListItem","ContactListButton","ContactList","isLoading","filter","selectFilterValue","filterContacts","contact","toLowerCase","includes","Loader","length","map","onClick","deleteContact","FilterFormInput","Filter","onChange","currentTarget","SectionTitle","SectionTitleText","Section","children","Container","Contacts","useEffect","fetchContacts"],"sourceRoot":""}